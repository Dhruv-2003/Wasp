import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import React, { useEffect, useState } from "react";
import {
  useCreateRevenuePath,
  useR3vlClient,
  useBalances,
  useRevenuePathTiers,
  useWithdraw,
  R3vlClient,
} from "@r3vl/sdk";
import { useAccount, useSigner, useProvider, useNetwork } from "wagmi";
import TierPath from "../components/tierPath";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const { address } = useAccount();
  const { chain } = useNetwork();
  const provider = useProvider();
  const { data: signer } = useSigner();

  useR3vlClient({
    chainId: chain?.id,
    provider,
    signer,
    initV2Final: true, // In case you want to create a "complex" Revenue Path with tiers
    initSimple: true, // For revenue paths with no additional tiers configuration
    apiKey: "YSuf7poj7AAH1cTGosm5WyWw2UI3lU",
  });

  const [revPathAddress, setRevPathAddress] = useState(
    "0x3Fa84520d75A0d24C3dBa18EcD015cfC4C264Dff"
  ); // 0xb39704787045F957f675662d0066263D21c53FC5
  const [revPathName, setRevPathName] = useState("Investment");
  const [tokenAddress, setTokenAddress] = useState();

  const handleCreateRevenuePath = async (_walletList, _distribution) => {
    const createArgs = {
      walletList: [["0xB72a04B01BB80DfD6a42ea8E0907B892286113F2"]],
      distribution: [[100]],
      tiers: [[100]],
      name: revPathName,
      mutabilityEnabled: true,
    };
    console.log(createArgs);
    const receipt = await createRevenuePathAsync(createArgs);
    console.log(receipt);
    const pathAddr = receipt.events[0].address;
    setRevPathAddress(pathAddr);
  };

  /** Create Rev Path */
  const { mutateAsync: createRevenuePathAsync } = useCreateRevenuePath();

  /** Balances */
  const { data: balances } = useBalances(
    revPathAddress,
    {
      walletAddress: address, // OPTIONAL - Address of specific user wallet
    },
    { enabled: !!address }
  ); /// show the Balances in the dashboard

  /** Tiers */
  const { data: tiers, isFetched: tiersFetched } =
    useRevenuePathTiers(revPathAddress);
  const tier = tiers?.[0] || {};

  useEffect(() => {
    console.log(tiers);
    console.log(balances);
  }, [tiers, balances]);
  /// For showing the info of all the tiers and distributions

  /** Withdraw */
  const withdraw = useWithdraw(revPathAddress);

  const handleGetData = () => {
    console.log(tiers);
    console.log(balances);
  };

  const handleWithdraw = () => {
    withdraw.mutate({
      walletAddress: address,
      isERC20: tokenAddress,
    });
  };

  return (
    <>
      <Head>
        <title>Reveel Path Creator</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-screen">
        <div className="mt-10 flex flex-col justify-center items-center mx-3 md:mx-0">
          <div className="md:w-1/3 w-full border-4 border-yellow-500 px-4 py-3 rounded-2xl">
            <div className="flex flex-col">
              <div>
                <p className="mx-3 text-yellow-500 text-xl">Reveel Path</p>
              </div>
              <div className="mx-3 mt-5">
                <p className="text-yellow-500 text-xl">Path Name</p>
              </div>
              <div className="mt-3 mx-3">
                <input
                  onChange={(e) => setRevPathName(e.target.value)}
                  type="text"
                  placeholder="Revenue Path Name"
                  className="w-full px-3 py-1 rounded-xl text-black"
                ></input>
              </div>
              {/* Need to create a separate component , setting wallet , distrbutions , with different tiers */}

              <TierPath handleCreateRevenuePath={handleCreateRevenuePath} />
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
